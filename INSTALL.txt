Resource Request System Installation
------------------------------------

Contents:
- Requirements
- Installation of RRS
- Configuration of RRS
  - General configuration
    - Database connection
    - Context parameters
  - Authentication configuration

= Requirements =

* RRS package
* Tomcat 5
* Ams2 version 1.4.6 database connection available
* IMDI browser and Ams2 web locations available (for frontend integration)
* Either Shibboleth or Lana2 authentication installed and configured

= Installation of RRS =

---------------------------------------------------------------------------
IMPORTANT: The RRS package does NOT contain a WEB-INF/web.xml file. Instead
it has templates from which you must choose when first installing RRS,
depending on the authentication mode to use! See below for details.
---------------------------------------------------------------------------

Deploy the RRS .war file to a Tomcat instance. Make sure the contents of
META-INF/context.xml are copied over to a context element that gets
processed by Tomcat (either in the common /conf/context.xml or the
application context file in conf/Catalina/...). 

Go to the WEB-INF directory of the unpacked application directory, and do
one of the following options:

a) For SHIBBOLETH authentication:
   - Rename (or copy) web-shib.xml to web.xml
   - Rename (or copy) shhaa-example.xml shhaa.xml
b) For LANA2 authentication:
   - Rename (or copy) web-lana2.xml to web.xml

Then proceed to the general configuration of RRS and configuration for the
chosen authentication mode.

= Configuration of RRS =

See below for section on configuring RRS for either Shibboleth or Lana2.

== General configuration ==

=== Database connection ===

RRS expects a named database resource 'java:comp/env/jdbc/CSDB' to be available for accessing
the corpus database. If you really must use another name, the used name can be configured in the
application's WEB-INF/web.xml file.

Setting up the 

=== Context parameters ===

Apart from authentication settings, RRS is configured through context parameters. All RRS-specific
parameters are prefixed with 'nl.mpi.rrs' to prevent collisions. This prefix must always be included
in the name of the context parameter, e.g.:

	    <Parameter name="nl.mpi.rrs.allowNewInternalUsers" value="true" />

See META-INF/context.xml for examples.

==== The following general archive parameters are REQUIRED: ====

- nl.mpi.smtpHost					(host name)
	Host name of the SMTP server that should be used for sending e-mails to the user and to 
	corpman.
	
- nl.mpi.emailAddressCorpman		(e-mail address)
	E-mail address that will recieve access requests and a copy of the verification e-mail for newly
	registered users.
	
- nl.mpi.archiveName					(String)
	The value of this archive-wide parameter will be used as a header for all view pages of RRS.

==== The following RRS parameters are REQUIRED: ====

- nl.mpi.rrs.allowNewInternalUsers		('true'|'false')	
	If set to true, RRS will allow users to register without login in first. Setting it to false 
	only makes sense in a federated Shibboleth context.

- nl.mpi.rrs.registrationFile			(writable file location)
	The specified file will be used by RRS to temporary store user information in the time between
	registration and verification. After verification the entry gets removed from this file and
	inserted in AMS. Needs read/write access.
	
- nl.mpi.rrs.dobesCocLink				(text|'default'|'none')
	Link to location of file with DoBES Code of Conduct.
	If set to 'default', it will use the built-in default location /ds/RRS_V1/dobes_coc_v2.html.
	If set to 'none', the signing of the code of conduct step is skipped. Instead, a confirmation
	page will be shown.
	
- nl.mpi.rrs.dobesCocLicenseName		(text)
	Name of the license to show. Will be ignored if nl.mpi.rrs.dobesCocLink is set to 'none'.
	
- nl.mpi.rrs.amsInterfaceLink			(URL)
	URL AMS lat access management system, will be the destination of the link in the 'Thank you' 
	page at the end of the registration process.
	Example: http://corpus1.mpi.nl/am/ams2/pages/welcome.face

- nl.mpi.imdibrowserOpenPathPrefix		(URL)
	Prefix for http link to nodeId in the IMDI browser. 
	Example: http://corpus1.mpi.nl/ds/imdi_browser?openpath=

==== The following RRS parameters are OPTIONAL: ====
	
- nl.mpi.rrs.archiveUsersIdpName		(text)
	Name of IdP to be shown to users that have registered unauthenticated. Leave empty to have none 
	shown (e.g. if there is only one or non-shibboleth mode).

- nl.mpi.rrs.registrationStaticPage		(readable file location)
	If set to a non-empty value, this page will be shown INSTEAD of the user registration form 
	(useful if AMS2 link is not available). Location should be relative to the application's root
	location (e.g. /WEB-INF/view/page/registrationStatic.jsp).

- nl.mpi.rrs.checkEmailSubject
        Subject for verification e-mail. Defaults to "Max Planck Institute registration check".

- nl.mpi.rrs.confirmationEmailSubject
        Subject for registration confirmation e-mail. Defaults to "Max Planck Institute registration".

=== Authentication configuration ===

==== Configuration for Shibboleth ====

In WEB-INF/web.xml, locate the following section:

    <context-param>
	<description>
	    Whether shibboleth environment is federated, i.e. there is a discovery service rather than a single IdP. 'True' or 'False'.
	    If set to 'True', user can choose to login before registration and register on their external credentials rather than for a
	    new internal account.
	</description>
	<param-name>shibIsFederated</param-name>
	<param-value>True</param-value>
    </context-param>

Set the param-value to either True or False depending on whether users
should be able to register with a federated account. If set to true, the
registration page will contain a link to the SSO page. If logged in, the
user will not be able to choose a user name and password but instead will
be registered on its external credentials. If set to false, users will
always have to create a new account with a self-chosen username.

To configure the shibboleth authentication filter, open the file
WEB-INF/shhaa.xml and configure it according to your shibboleth environment.
For information on how to configure the filter, see
<https://aai2.rzg.mpg.de/>. Do not modifiy the composition, authorization,
and handler settings.

==== AMS library ====
Make sure that the right AMS library is in place and that it is configured
properly. In the case of the non-hybrid ('classic IMDI') archive use
replace 'ams2-1.5.1.jar' with 'ams2-1.5.1-lux17-imdi.jar'.

==== Configuration for Lana2 ====

In WEB-INF/web.xml, make sure that the values in the init-param elements for
the SsoFilter are set according to the environment. They are contained in
the element that starts with:

    <!-- Begin Lana2 authentication filter -->
    <filter>
	<filter-name>SsoFilter</filter-name>
	<filter-class>nl.mpi.lat.auth.lana2.LanaAuthFilter</filter-class><!-- lana2 -->

and ends with:

    </filter>
    <!-- End Lana2 authentication filter -->
